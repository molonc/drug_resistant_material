
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-conda_cos6-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> # TO DO: get results of batch effect models for all series of data 
> 
> # check SA535 cisplatin output
> # check cx output 
> # do 1 correction for 2 drugs only 
> # sa1035 output 
> # SA609 output 
> 
> 
> source(paste0("/home/htran/Projects/farhia_project/rscript/pipeline/utils/normalize_utils.R"))
> 
> 
> # datatag <- 'SA535'
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # save_dir <- paste0(input_dir,'rnaseq_v6/normalization_evaluation/SA535_cisplatin/')
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # norm_sce <- readRDS(paste0(output_dir, datatag,'_total_sctransform_normalized.rds'))
> # dim(norm_sce)
> # meta_info <- read.csv(paste0(save_dir,datatag, "_meta_info.csv"))
> # dim(meta_info)
> # View(head(meta_info))
> # generate_input_data_ridge_regression(norm_sce, save_dir, datatag)
> # convert_corrected_mtx_to_sce(norm_sce, save_dir, corrected_mtx_fn=NULL, datatag)
> 
> # rm(norm_sce)
> # rm(corrected_data)
> # datatag <- 'SA1035'
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # save_dir <- paste0(input_dir,'rnaseq_v6/normalization_evaluation/',datatag,'/')
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # norm_sce <- readRDS(paste0(output_dir, datatag,'_sctransform_normalized.rds'))
> # dim(norm_sce)
> # generate_input_data_ridge_regression(norm_sce, save_dir, datatag)
> # convert_corrected_mtx_to_sce(norm_sce, save_dir, corrected_mtx_fn=NULL, datatag,
> #                              return_sce=F, save_data=T)
> 
> 
> # rm(norm_sce)
> datatag <- 'SA609'
> input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> save_dir <- paste0(input_dir,'rnaseq_v6/normalization_evaluation/',datatag,'/')
> norm_sce <- readRDS(paste0(output_dir, datatag,'_sctransform_normalized.rds'))
> dim(norm_sce)
[1] 13941 33881
> metacells_fn <-  paste0(input_dir,'SA609_rna/snakemake_10x/SA609_10x.csv')
> sample_df <- read.csv(metacells_fn, stringsAsFactors = F, check.names = F)
> print(dim(sample_df))
[1] 15 11
> sample_df <- sample_df %>%
+   dplyr::select(mouse_id, batch_info) %>%
+   dplyr::rename(batch=batch_info)
> rownames(sample_df) <- sample_df$mouse_id
> norm_sce$batch <- sample_df[norm_sce$sample,'batch']
> # generate_input_data_ridge_regression(norm_sce, save_dir, datatag)
> convert_corrected_mtx_to_sce(norm_sce, save_dir, corrected_mtx_fn=NULL, datatag,
+                              return_sce=F, save_data=T)
[1] 13941 33881
[1] 13941 33881
class: SingleCellExperiment 
dim: 13941 33881 
metadata(0):
assays(2): counts logcounts
rownames(13941): ENSG00000238009 ENSG00000237491 ... ENSG00000278384
  ENSG00000271254
rowData names(6): sct.detection_rate sct.gmean ...
  sct.residual_variance sct.variable
colnames(33881): SA609X3XB01584_AAACCTGGTACGAAAT-1
  SA609X3XB01584_AAAGATGCAAACGTGG-1 ...
  SA609X7XB03573_TTTGTTGTCACACCGG-1 SA609X7XB03573_TTTGTTGTCGAAGTGG-1
colData names(83): Sample Barcode ... ident batch
reducedDimNames(0):
spikeNames(0):
altExpNames(0):
> # meta_info <- read.csv("/home/htran/storage/datasets/drug_resistance/rna_results/rnaseq_v6/normalization_evaluation/SA609/SA609_meta_info.csv")
> # unique(meta_info$clone)
>   
> 
> proc.time()
   user  system elapsed 
408.199  34.470 750.883 
