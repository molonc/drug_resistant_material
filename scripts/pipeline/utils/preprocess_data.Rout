
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.4     ✔ dplyr   1.0.0
✔ tidyr   1.1.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Warning message:
replacing previous import ‘vctrs::data_frame’ by ‘tibble::data_frame’ when loading ‘dplyr’ 
> library(stringr)
> source(paste0("/home/htran/Projects/farhia_project/rscript/pipeline/utils/normalize_utils.R"))
> 
> 
> load_sce <- function(metacells_fn, datatag, input_dir=NULL, return_data=T, tag=''){
+   
+   sample_df <- read.csv(metacells_fn)
+   # if(tag=='cisplatin' & datatag=='SA535'){
+   #   print(tag)
+   #   sample_df <- sample_df %>%
+   #     dplyr::filter(PDX %in% c('SA535_untreated','SA535_CY'))
+   # }
+   # if(tag=='CX5461' & datatag=='SA535'){
+   #   print(tag)
+   #   sample_df <- sample_df %>%
+   #     dplyr::filter(PDX %in% c('SA535_untreated','SA535_CX'))
+   # }
+   print(dim(sample_df))
+   print(sample_df$mouse_id)
+   # sample_df <- sample_df %>%
+   #   dplyr::filter(treatmentSt %in% grep("*T$",sample_df$treatmentSt, value = T))
+   # View(sample_df)
+   sce_list <- list()
+   c <- 0
+   for(s in unique(sample_df$mouse_id)){
+     if(datatag=="SA609" & s=="SA609X4XB03083"){
+       s <- "SA609X4XB003083"
+     }
+     sce_fn <- paste0(input_dir,'rnaseq_v6/',datatag,'-v6/', s,'.rdata')
+     if(file.exists(sce_fn)){
+       sce <- readRDS(sce_fn)
+       print(s)
+       print(dim(sce))
+       if(nrow(sce)>0){
+         c <- c + 1
+         sce_list[c] <- sce
+       }
+     }else{
+       print(paste0('DEBUG: do not exist sample: ',s))
+     }
+   }
+   
+   print(length(sce_list))
+   # From 33538 to 13214 genes, remove genes with zeroes in 97.5% cells
+   sce_combine <- sce_cbind_func(sce_list, rowData(sce), cut_off_overall = 0.01, exprs = c("counts"), 
+                                 colData_names = colnames(colData(sce)), meta_data=NULL)
+   print(dim(sce_combine))
+   print("Removing mito, ribo genes: ")
+   mito_genes <- str_detect(rowData(sce_combine)$Symbol, "^MT\\-")
+   sum(mito_genes==TRUE)
+   
+   ribo_genes <- str_detect(rowData(sce_combine)$Symbol, "^RP(L|S)")  # or ^RP[L|S]
+   sum(ribo_genes==TRUE)
+   sce_combine <- sce_combine[(!mito_genes) & (!ribo_genes), ]
+   
+   print(dim(sce_combine))
+   rownames(sce_combine) <- rowData(sce_combine)$ID
+   
+   # saveRDS(sce_combine,paste0(input_dir,'rnaseq_v6/',datatag,'-v6/total_sce_treated.rds'))
+   clone_df <- load_metaclone(input_dir, sample_df, datatag, tag)
+   
+   colnames(sce_combine) <- paste0(sce_combine$sample,'_',sce_combine$Barcode)
+   sce_combine$cell_id <- colnames(sce_combine)
+   cells_use <- intersect(colnames(sce_combine), clone_df$cell_id)
+   print(length(cells_use))
+   # sce_combine <- sce_combine[,cells_use]
+   sce_combine$clone <- 'unassigned'
+   sce_combine$library_id <- get_lib_info(sce_combine)
+   rownames(clone_df) <- clone_df$cell_id
+   # colData(sce_combine)[cells_use,'library_id'] <- clone_df[cells_use,'library_id']
+   colData(sce_combine)[cells_use,'clone'] <- clone_df[cells_use,'clone']
+   print(summary(as.factor(sce_combine$clone)))
+   print(summary(as.factor(sce_combine$series)))
+   sce_combine$series <- gsub(paste0(datatag,'-'),'',sce_combine$series)
+   sce_combine$treatmentSt <- get_treatment_status(sce_combine$series)
+   print(unique(sce_combine$treatmentSt))
+   
+   sample_df <- sample_df %>%
+     dplyr::select(library_id, mouse_id, batch_info) %>%
+     dplyr::rename(batch=batch_info)
+   rownames(sample_df) <- sample_df$library_id
+   sce_combine$batch <- 'None'
+   sce_combine$batch <- sample_df[sce_combine$library_id,'batch']
+   print(unique(sce_combine$batch))
+   
+   if(tag!=''){
+     tag <- paste0(tag,'_')
+   }
+   saveRDS(sce_combine,paste0(input_dir,'rnaseq_v6/',datatag,'-v6/',datatag, '_',tag, 'total_sce_v3.rds'))
+   if(return_data){
+     return(sce_combine)
+   }
+ }
> 
> 
> load_sce_reduced_version <- function(mouse_ids, datatag, input_dir=NULL, return_data=T, tag=''){
+   
+   
+   sce_list <- list()
+   c <- 0
+   for(s in unique(mouse_ids)){
+     sce_fn <- paste0(input_dir, s,'.rdata')
+     if(file.exists(sce_fn)){
+       sce <- readRDS(sce_fn)
+       print(s)
+       print(dim(sce))
+       if(nrow(sce)>0){
+         c <- c + 1
+         sce_list[c] <- sce
+       }
+     }else{
+       print(paste0('DEBUG: do not exist sample: ',s))
+     }
+   }
+   
+   print(length(sce_list))
+   # From 33538 to 13214 genes, remove genes with zeroes in 97.5% cells
+   sce_combine <- sce_cbind_func(sce_list, rowData(sce), cut_off_overall = 0.025, exprs = c("counts"), 
+                                 colData_names = colnames(colData(sce)), meta_data=NULL)
+   print(dim(sce_combine))
+   print("Removing mito, ribo genes: ")
+   mito_genes <- str_detect(rowData(sce_combine)$Symbol, "^MT\\-")
+   sum(mito_genes==TRUE)
+   
+   ribo_genes <- str_detect(rowData(sce_combine)$Symbol, "^RP(L|S)")  # or ^RP[L|S]
+   sum(ribo_genes==TRUE)
+   sce_combine <- sce_combine[(!mito_genes) & (!ribo_genes), ]
+   
+   print(dim(sce_combine))
+   rownames(sce_combine) <- rowData(sce_combine)$ID
+   print(sce_combine$sample[1])
+   print(sce_combine$Barcode[1])
+   colnames(sce_combine) <- paste0(sce_combine$sample,'_',sce_combine$Barcode)
+   sce_combine$cell_id <- colnames(sce_combine)
+   print(summary(as.factor(sce_combine$series)))
+   # sce_combine$series <- gsub(paste0(datatag,'-'),'',sce_combine$series)
+   # sce_combine$treatmentSt <- get_treatment_status(sce_combine$series)
+   
+   if(tag!=''){
+     tag <- paste0(tag,'_')
+   }
+   saveRDS(sce_combine,paste0(input_dir, datatag, '_',tag, 'total_sce.rds'))
+   if(return_data){
+     return(sce_combine)
+   }
+ }
> 
> 
> load_metaclone <- function(input_dir, sample_df, datatag, tag){
+   clones_list <- list()
+   c <- 0
+   for(s in unique(sample_df$mouse_id)){
+     if(datatag=="SA609" & s=="SA609X4XB03083"){
+       s <- "SA609X4XB003083"
+     }
+     cls_fn <- paste0(input_dir,'rnaseq_v6/',datatag,'-v6/', s,'.csv')
+     if(file.exists(cls_fn)){
+       sclone_df <- read.csv(cls_fn, check.names = F, stringsAsFactors = F, colClasses=c("clone"="character"))
+       # read_csv(input_file,col_types = cols(.default = "?", clone = "c"))
+       print(s)
+       print(dim(sclone_df))
+       if(nrow(sclone_df)>0){
+         c <- c + 1
+         clones_list[[c]] <- sclone_df
+       }
+     }else{
+       print(paste0('Do not exist sample: ',s))
+     }
+   }  
+   length(clones_list)
+   clone_df <- do.call(rbind, clones_list)
+   
+   clone_df$Sample <- gsub('(.cache/)','',clone_df$Sample)
+   clone_df$Sample <- gsub('(/filtered_feature_bc_matrix)','',clone_df$Sample)
+   colnames(clone_df)[which(names(clone_df) == "Sample")] <- "library_id"
+   colnames(clone_df)[which(names(clone_df) == "id")] <- "mouse_id"
+   # head(clone_df)
+   print(unique(clone_df$library_id))
+   print(dim(clone_df))
+   if(tag!=''){
+     tag <- paste0(tag,'_')
+   }
+   write.csv(clone_df, paste0(input_dir,'rnaseq_v6/',datatag,'-v6/',datatag,'_',tag,'total_clones.csv'), row.names = F, quote = F)
+   
+   # clone_df <- read.csv(paste0(input_dir,'rnaseq_v6/',datatag,'-v6/total_clones.csv'), check.names=F, stringsAsFactors=F)
+   # clone_df$clone
+   print(dim(clone_df))
+   print(head(clone_df))
+   return(clone_df)
+   
+ }
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # datatag <- 'SA609'
> # metacells_fn <-  paste0(input_dir,'SA609_rna/snakemake_10x/SA609_10x.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T)
> # fs <- list.files(path=paste0(input_dir,'rnaseq_v6/',datatag,'-v6/'),pattern = '*.rdata',recursive = F)
> # fs <- gsub('.rdata','',fs)
> # fs[!fs %in% sample_df$mouse_id]
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, datatag, return_data=F)
> # unique(sce_raw$sample)
> # dim(sce_raw)
> # filtered_sce_raw <- sce_raw[,!grepl('*TU$',sce_raw$treatmentSt)]
> # filtered_sce_raw <- filtered_sce_raw[,!filtered_sce_raw$treatmentSt %in% c("UTTTT","UUUUU","U")]
> # dim(filtered_sce_raw)
> # saveRDS(filtered_sce_raw, paste0(input_dir,'rnaseq_v6/',datatag,'-v6/','subset_total_sce_v3.rds'))
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # datatag <- 'SA1035'
> # metacells_fn <-  paste0(input_dir,'SA1035_rna/snakemake_10x_SA1035/metasample_SA1035.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T)
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, datatag, return_data=F)
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/others_dataset/SA535_cisplatin/'
> # datatag <- 'SA535'
> # tag <- 'cisplatin'
> # metacells_fn <-  paste0(input_dir,'SA535_total_rna_v2/snakemake/metasample_SA535.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T, tag)
> 
> # sce <- load_sce_reduced_version(mouse_ids, datatag, input_dir, return_data=T, tag)
> 
> # fs <- list.files(path=input_dir,pattern = '*.rdata',recursive = F)
> # fs <- gsub('.rdata','',fs)
> # fs[!fs %in% sample_df$mouse_id]
> # sample_df$mouse_id[!sample_df$mouse_id %in% fs]
> # mouse_ids <- fs
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # dir.create(output_dir)
> # output_dir <- input_dir
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, paste0(datatag,'_',tag), return_data=F)
> 
> 
> 
> input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> datatag <- 'SA535'
> # tag <- 'CX5461'
> tag <- 'total'
> metacells_fn <-  paste0(input_dir,'SA535_total_rna_v2/snakemake/metasample_SA535.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T, tag)
> sce <- readRDS(paste0(input_dir,'rnaseq_v6/',datatag,'-v6/',datatag, '_',tag, '_total_sce_v3.rds'))
> output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> dir.create(output_dir)
Warning message:
In dir.create(output_dir) :
  '/home/htran/storage/datasets/drug_resistance/rna_results/rnaseq_v6/SA535-v6' already exists
> 
> print("Twice scran normalization")
[1] "Twice scran normalization"
> source(paste0("/home/htran/Projects/farhia_project/rscript/pipeline/utils/twice_scran_normalization_corrected.R"))
> sce_scran <- twice_scran_normalize_v2(sce, input_dir, output_dir, paste0(datatag,'_',tag), return_data=F)
[1] 14708 20084
[1] "Processing sample:  SA535X4XB02498"
[1] 14708   367
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X5XB02895"
[1] 14708   613
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X6XB03099"
[1] 14708  1318
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X6XB03101"
[1] 14708  1103
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X7XB03304"
[1] 14708   659
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X7XB03448"
[1] 14708   748
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X7XB03305"
[1] 14708   880
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03663"
[1] 14708   553
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03431"
[1] 14708   968
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03434"
[1] 14708   505
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X9XB03617"
[1] 14708   595
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X9XB03616"
[1] 14708  1173
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03664"
[1] 14708  1109
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X5XB02891"
[1] 14708   337
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X5XB02894"
[1] 14708   212
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X6XB03200"
[1] 14708  1891
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X6XB03203"
[1] 14708   657
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03548"
[1] 14708  1607
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X8XB03546"
[1] 14708   878
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X10XB03696"
[1] 14708   586
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X10XB03693"
[1] 14708   899
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X7XB03394"
[1] 14708  1504
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X9XB03776"
[1] 14708   588
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Processing sample:  SA535X9XB03699"
[1] 14708   334
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts"
[1] "Dim sce combine: 14708" "Dim sce combine: 20084"
[1] "sce combine assay name: counts"     "sce combine assay name: normcounts"
[1] "Normalizing total data..."
[1] "Quick clustering"
[1] "Compute sum factors"
[1] "Normalize data"
[1] "counts"     "normcounts" "logcounts" 
> 
> print("Seurat normalization")
[1] "Seurat normalization"
> sce_seurat <- normalize_Seurat(sce, input_dir, output_dir, paste0(datatag,'_',tag), return_data=F)
[1] 14708 20084
[1] "Normalizing data..."
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |=====                                                                 |   7%  |                                                                              |=========                                                             |  13%  |                                                                              |==============                                                        |  20%  |                                                                              |===================                                                   |  27%  |                                                                              |=======================                                               |  33%  |                                                                              |============================                                          |  40%  |                                                                              |=================================                                     |  47%  |                                                                              |=====================================                                 |  53%  |                                                                              |==========================================                            |  60%  |                                                                              |===============================================                       |  67%  |                                                                              |===================================================                   |  73%  |                                                                              |========================================================              |  80%  |                                                                              |=============================================================         |  87%  |                                                                              |=================================================================     |  93%  |                                                                              |======================================================================| 100%
[1] "counts"     "logcounts"  "normcounts"
[1] 14708 20084
[1] "Save normalized data..."
> 
> print("SCTransform normalization")
[1] "SCTransform normalization"
> normalize_SCTransform(sce, output_dir, paste0(datatag,'_',tag), return_data=F)
[1] 14708 20084
Calculating cell attributes from input UMI matrix: log_umi
Variance stabilizing transformation of count matrix of size 14708 by 20084
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 10000 cells
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Found 72 outliers - those will be ignored in fitting/regularization step

Second step: Get residuals using fitted parameters for 14708 genes
  |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   3%  |                                                                              |=====                                                                 |   7%  |                                                                              |=======                                                               |  10%  |                                                                              |=========                                                             |  13%  |                                                                              |============                                                          |  17%  |                                                                              |==============                                                        |  20%  |                                                                              |================                                                      |  23%  |                                                                              |===================                                                   |  27%  |                                                                              |=====================                                                 |  30%  |                                                                              |=======================                                               |  33%  |                                                                              |==========================                                            |  37%  |                                                                              |============================                                          |  40%  |                                                                              |==============================                                        |  43%  |                                                                              |=================================                                     |  47%  |                                                                              |===================================                                   |  50%  |                                                                              |=====================================                                 |  53%  |                                                                              |========================================                              |  57%  |                                                                              |==========================================                            |  60%  |                                                                              |============================================                          |  63%  |                                                                              |===============================================                       |  67%  |                                                                              |=================================================                     |  70%  |                                                                              |===================================================                   |  73%  |                                                                              |======================================================                |  77%  |                                                                              |========================================================              |  80%  |                                                                              |==========================================================            |  83%  |                                                                              |=============================================================         |  87%  |                                                                              |===============================================================       |  90%  |                                                                              |=================================================================     |  93%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Computing corrected count matrix for 14708 genes
  |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   3%  |                                                                              |=====                                                                 |   7%  |                                                                              |=======                                                               |  10%  |                                                                              |=========                                                             |  13%  |                                                                              |============                                                          |  17%  |                                                                              |==============                                                        |  20%  |                                                                              |================                                                      |  23%  |                                                                              |===================                                                   |  27%  |                                                                              |=====================                                                 |  30%  |                                                                              |=======================                                               |  33%  |                                                                              |==========================                                            |  37%  |                                                                              |============================                                          |  40%  |                                                                              |==============================                                        |  43%  |                                                                              |=================================                                     |  47%  |                                                                              |===================================                                   |  50%  |                                                                              |=====================================                                 |  53%  |                                                                              |========================================                              |  57%  |                                                                              |==========================================                            |  60%  |                                                                              |============================================                          |  63%  |                                                                              |===============================================                       |  67%  |                                                                              |=================================================                     |  70%  |                                                                              |===================================================                   |  73%  |                                                                              |======================================================                |  77%  |                                                                              |========================================================              |  80%  |                                                                              |==========================================================            |  83%  |                                                                              |=============================================================         |  87%  |                                                                              |===============================================================       |  90%  |                                                                              |=================================================================     |  93%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Calculating gene attributes
Wall clock passed: Time difference of 4.25797 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |====                                                                  |   5%  |                                                                              |=======                                                               |  10%  |                                                                              |==========                                                            |  15%  |                                                                              |==============                                                        |  20%  |                                                                              |==================                                                    |  25%  |                                                                              |=====================                                                 |  30%  |                                                                              |========================                                              |  35%  |                                                                              |============================                                          |  40%  |                                                                              |================================                                      |  45%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================                                |  55%  |                                                                              |==========================================                            |  60%  |                                                                              |==============================================                        |  65%  |                                                                              |=================================================                     |  70%  |                                                                              |====================================================                  |  75%  |                                                                              |========================================================              |  80%  |                                                                              |============================================================          |  85%  |                                                                              |===============================================================       |  90%  |                                                                              |==================================================================    |  95%  |                                                                              |======================================================================| 100%
Set default assay to SCT
Warning: Invalid name supplied, making object name syntactically valid. New object name is Seurat..SCTransform.RNA; see ?make.names for more details on syntax validity
[1] 14708 20084
[1] 14708 20084
[1] "counts"    "logcounts"
[1] "counts"     "logcounts"  "normcounts"
[1] 14708 20084
[1] "Save normalized data..."
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/others_dataset/SA906a/'
> # datatag <- 'SA906a'
> # tag <- ''
> # mouse_ids <- c('SA906_p11a','SA906_p57a')
> # sce <- load_sce_reduced_version(mouse_ids, datatag, input_dir, return_data=T, tag)
> # dim(sce)
> # output_dir <- input_dir
> # # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, paste0(datatag,'_',tag), return_data=F)
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/others_dataset/SA906b/'
> # datatag <- 'SA906b'
> # tag <- ''
> # mouse_ids <- c('SA906_p15b','SA906_p50b')
> # sce <- load_sce_reduced_version(mouse_ids, datatag, input_dir, return_data=T, tag)
> # dim(sce)
> # output_dir <- input_dir
> # # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, datatag, return_data=F)
> 
> 
> 
> 
> 
> proc.time()
    user   system  elapsed 
1712.280   58.840 1778.224 
