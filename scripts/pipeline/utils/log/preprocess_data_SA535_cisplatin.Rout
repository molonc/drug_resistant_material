
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.4     ✔ dplyr   1.0.0
✔ tidyr   1.1.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Warning message:
replacing previous import ‘vctrs::data_frame’ by ‘tibble::data_frame’ when loading ‘dplyr’ 
> library(stringr)
> source(paste0("/home/htran/Projects/farhia_project/rscript/pipeline/utils/normalize_utils.R"))
> 
> 
> load_sce <- function(metacells_fn, datatag, input_dir=NULL, return_data=T, tag=''){
+   
+   sample_df <- read.csv(metacells_fn)
+   if(tag=='cisplatin' & datatag=='SA535'){
+     print(tag)
+     sample_df <- sample_df %>%
+       dplyr::filter(PDX %in% c('SA535_untreated','SA535_CY'))
+   }
+   if(tag=='CX5461' & datatag=='SA535'){
+     print(tag)
+     sample_df <- sample_df %>%
+       dplyr::filter(PDX %in% c('SA535_untreated','SA535_CY'))
+   }
+   print(dim(sample_df))
+   # sample_df <- sample_df %>%
+   #   dplyr::filter(treatmentSt %in% grep("*T$",sample_df$treatmentSt, value = T))
+   # View(sample_df)
+   sce_list <- list()
+   c <- 0
+   for(s in unique(sample_df$mouse_id)){
+     if(datatag=="SA609" & s=="SA609X4XB03083"){
+       s <- "SA609X4XB003083"
+     }
+     sce_fn <- paste0(input_dir,'rnaseq_v6/',datatag,'-v6/', s,'.rdata')
+     if(file.exists(sce_fn)){
+       sce <- readRDS(sce_fn)
+       print(s)
+       print(dim(sce))
+       if(nrow(sce)>0){
+         c <- c + 1
+         sce_list[c] <- sce
+       }
+     }else{
+       print(paste0('DEBUG: do not exist sample: ',s))
+     }
+   }
+   
+   print(length(sce_list))
+   # From 33538 to 13214 genes, remove genes with zeroes in 97.5% cells
+   sce_combine <- sce_cbind_func(sce_list, rowData(sce), cut_off_overall = 0.025, exprs = c("counts"), 
+                                 colData_names = colnames(colData(sce)), meta_data=NULL)
+   print(dim(sce_combine))
+   print("Removing mito, ribo genes: ")
+   mito_genes <- str_detect(rowData(sce_combine)$Symbol, "^MT\\-")
+   sum(mito_genes==TRUE)
+   
+   ribo_genes <- str_detect(rowData(sce_combine)$Symbol, "^RP(L|S)")  # or ^RP[L|S]
+   sum(ribo_genes==TRUE)
+   sce_combine <- sce_combine[(!mito_genes) & (!ribo_genes), ]
+   
+   print(dim(sce_combine))
+   rownames(sce_combine) <- rowData(sce_combine)$ID
+   
+   # saveRDS(sce_combine,paste0(input_dir,'rnaseq_v6/',datatag,'-v6/total_sce_treated.rds'))
+   clone_df <- load_metaclone(input_dir, sample_df, datatag, tag)
+   
+   colnames(sce_combine) <- paste0(sce_combine$sample,'_',sce_combine$Barcode)
+   sce_combine$cell_id <- colnames(sce_combine)
+   cells_use <- intersect(colnames(sce_combine), clone_df$cell_id)
+   print(length(cells_use))
+   # sce_combine <- sce_combine[,cells_use]
+   sce_combine$clone <- 'None'
+   sce_combine$library_id <- NA
+   rownames(clone_df) <- clone_df$cell_id
+   colData(sce_combine)[cells_use,'library_id'] <- clone_df[cells_use,'library_id']
+   colData(sce_combine)[cells_use,'clone'] <- clone_df[cells_use,'clone']
+   print(summary(as.factor(sce_combine$clone)))
+   print(summary(as.factor(sce_combine$series)))
+   sce_combine$series <- gsub(paste0(datatag,'-'),'',sce_combine$series)
+   sce_combine$treatmentSt <- get_treatment_status(sce_combine$series)
+   
+   if(tag!=''){
+     tag <- paste0(tag,'_')
+   }
+   saveRDS(sce_combine,paste0(input_dir,'rnaseq_v6/',datatag,'-v6/',datatag, '_',tag, 'total_sce_v3.rds'))
+   if(return_data){
+     return(sce_combine)
+   }
+ }
> 
> 
> load_metaclone <- function(input_dir, sample_df, datatag, tag){
+   clones_list <- list()
+   c <- 0
+   for(s in unique(sample_df$mouse_id)){
+     if(datatag=="SA609" & s=="SA609X4XB03083"){
+       s <- "SA609X4XB003083"
+     }
+     cls_fn <- paste0(input_dir,'rnaseq_v6/',datatag,'-v6/', s,'.csv')
+     if(file.exists(cls_fn)){
+       sclone_df <- read.csv(cls_fn, check.names = F, stringsAsFactors = F, colClasses=c("clone"="character"))
+       # read_csv(input_file,col_types = cols(.default = "?", clone = "c"))
+       print(s)
+       print(dim(sclone_df))
+       if(nrow(sclone_df)>0){
+         c <- c + 1
+         clones_list[[c]] <- sclone_df
+       }
+     }else{
+       print(paste0('Do not exist sample: ',s))
+     }
+   }  
+   length(clones_list)
+   clone_df <- do.call(rbind, clones_list)
+   
+   clone_df$Sample <- gsub('(.cache/)','',clone_df$Sample)
+   clone_df$Sample <- gsub('(/filtered_feature_bc_matrix)','',clone_df$Sample)
+   colnames(clone_df)[which(names(clone_df) == "Sample")] <- "library_id"
+   colnames(clone_df)[which(names(clone_df) == "id")] <- "mouse_id"
+   # head(clone_df)
+   print(unique(clone_df$library_id))
+   print(dim(clone_df))
+   if(tag!=''){
+     tag <- paste0(tag,'_')
+   }
+   write.csv(clone_df, paste0(input_dir,'rnaseq_v6/',datatag,'-v6/',datatag,'_',tag,'total_clones.csv'), row.names = F, quote = F)
+   
+   # clone_df <- read.csv(paste0(input_dir,'rnaseq_v6/',datatag,'-v6/total_clones.csv'), check.names=F, stringsAsFactors=F)
+   # clone_df$clone
+   print(dim(clone_df))
+   print(head(clone_df))
+   return(clone_df)
+   
+ }
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # datatag <- 'SA609'
> # metacells_fn <-  paste0(input_dir,'SA609_rna/snakemake_10x/SA609_10x.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T)
> # fs <- list.files(path=paste0(input_dir,'rnaseq_v6/',datatag,'-v6/'),pattern = '*.rdata',recursive = F)
> # fs <- gsub('.rdata','',fs)
> # fs[!fs %in% sample_df$mouse_id]
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, datatag, return_data=F)
> 
> 
> # input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> # datatag <- 'SA1035'
> # metacells_fn <-  paste0(input_dir,'SA1035_rna/snakemake_10x_SA1035/metasample_SA1035.csv')
> # sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T)
> # output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> # dir.create(output_dir)
> # print("SCTransform normalization")
> # normalize_SCTransform(sce, output_dir, datatag, return_data=F)
> 
> 
> input_dir <- '/home/htran/storage/datasets/drug_resistance/rna_results/'
> datatag <- 'SA535'
> tag <- 'cisplatin'
> metacells_fn <-  paste0(input_dir,'SA535_total_rna_v2/snakemake/metasample_SA535.csv')
> sce <- load_sce(metacells_fn, datatag, input_dir, return_data=T, tag)
[1] "cisplatin"
[1] 15  6
[1] "SA535X4XB02498"
[1] 33538   367
[1] "SA535X5XB02895"
[1] 33538   613
[1] "SA535X6XB03099"
[1] 33538  1318
[1] "SA535X6XB03101"
[1] 33538  1103
[1] "SA535X7XB03304"
[1] 33538   659
[1] "SA535X7XB03448"
[1] 33538   748
[1] "SA535X7XB03305"
[1] 33538   880
[1] "SA535X8XB03663"
[1] 33538   553
[1] "SA535X8XB03431"
[1] 33538   968
[1] "SA535X8XB03434"
[1] 33538   505
[1] "SA535X9XB03617"
[1] 33538   595
[1] "SA535X9XB03616"
[1] 33538  1173
[1] "SA535X8XB03664"
[1] 33538  1109
[1] "SA535X9XB03776"
[1] 33538   588
[1] 14
[1] "Dim sce combine: 13274" "Dim sce combine: 11179"
[1] "sce combine assay name: counts"
[1] 13274 11179
[1] "Removing mito, ribo genes: "
[1] 13168 11179
[1] "SA535X4XB02498"
[1] 367   5
[1] "SA535X5XB02895"
[1] 613   5
[1] "SA535X6XB03099"
[1] 1318    5
[1] "SA535X6XB03101"
[1] 1103    5
[1] "SA535X7XB03304"
[1] 659   5
[1] "SA535X7XB03448"
[1] 748   5
[1] "SA535X7XB03305"
[1] 871   5
[1] "SA535X8XB03663"
[1] 553   5
[1] "SA535X8XB03431"
[1] 962   5
[1] "SA535X8XB03434"
[1] 505   5
[1] "SA535X9XB03617"
[1] 595   5
[1] "SA535X9XB03616"
[1] 1163    5
[1] "SA535X8XB03664"
[1] 1109    5
[1] "SA535X9XB03776"
[1] 588   5
 [1] "SCRNA10X_SA_CHIP0148_001" "TENX048"                 
 [3] "SCRNA10X_SA_CHIP0146_006" "SCRNA10X_SA_CHIP0175_001"
 [5] "SCRNA10X_SA_CHIP0182_001" "SCRNA10X_SA_CHIP0189_001"
 [7] "SCRNA10X_SA_CHIP0184_001" "SCRNA10X_SA_CHIP0146_004"
 [9] "SCRNA10X_SA_CHIP0189_002" "SCRNA10X_SA_CHIP0182_002"
[11] "SCRNA10X_SA_CHIP0184_002" "SCRNA10X_SA_CHIP0173_002"
[13] "SCRNA10X_SA_CHIP0173_001" "SCRNA10X_SA_CHIP0195_001"
[15] "SCRNA10X_SA_CHIP0208_002"
[1] 11154     5
[1] 11154     5
                library_id            Barcode                           cell_id
1 SCRNA10X_SA_CHIP0148_001 AAACCCAGTTGCTCCT-1 SA535X4XB02498_AAACCCAGTTGCTCCT-1
2 SCRNA10X_SA_CHIP0148_001 AAACGCTGTCAGCTTA-1 SA535X4XB02498_AAACGCTGTCAGCTTA-1
3 SCRNA10X_SA_CHIP0148_001 AAAGAACTCCCAATAG-1 SA535X4XB02498_AAAGAACTCCCAATAG-1
4 SCRNA10X_SA_CHIP0148_001 AAAGTCCGTGCATCTA-1 SA535X4XB02498_AAAGTCCGTGCATCTA-1
5 SCRNA10X_SA_CHIP0148_001 AAATGGACAACCACAT-1 SA535X4XB02498_AAATGGACAACCACAT-1
6 SCRNA10X_SA_CHIP0148_001 AACAAAGCAAAGGAGA-1 SA535X4XB02498_AACAAAGCAAAGGAGA-1
        mouse_id clone
1 SA535X4XB02498     J
2 SA535X4XB02498     J
3 SA535X4XB02498     Q
4 SA535X4XB02498     J
5 SA535X4XB02498     Q
6 SA535X4XB02498     Q
[1] 11154
         I        I_L          J          K          L       None          P 
      1042       1402       2898        123        265         25        298 
         Q          R          S          T          U unassigned 
      3086        129        433       1197        115        166 
     SA535-X4-U     SA535-X5-UU    SA535-X6-UUT    SA535-X6-UUU   SA535-X7-UUTT 
            367             613            1103            1318             659 
  SA535-X7-UUTU   SA535-X7-UUUU  SA535-X8-UUTTT  SA535-X8-UUTTU  SA535-X8-UUUUU 
            880             748             968             505            1662 
SA535-X9-UUTTTT SA535-X9-UUTTTU SA535-X9-UUUUUU 
            595            1173             588 
There were 14 warnings (use warnings() to see them)
> 
> # fs <- list.files(path=paste0(input_dir,'rnaseq_v6/',datatag,'-v6/'),pattern = '*.rdata',recursive = F)
> # fs <- gsub('.rdata','',fs)
> # fs[!fs %in% sample_df$mouse_id]
> # sample_df$mouse_id[!sample_df$mouse_id %in% fs]
> 
> output_dir <- paste0(input_dir,'rnaseq_v6/',datatag, '-v6/')
> dir.create(output_dir)
Warning message:
In dir.create(output_dir) :
  '/home/htran/storage/datasets/drug_resistance/rna_results/rnaseq_v6/SA535-v6' already exists
> print("SCTransform normalization")
[1] "SCTransform normalization"
> normalize_SCTransform(sce, output_dir, paste0(datatag,'_',tag), return_data=F)
[1] 13168 11179
Calculating cell attributes from input UMI matrix: log_umi
Variance stabilizing transformation of count matrix of size 13168 by 11179
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 5000 cells
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Found 49 outliers - those will be ignored in fitting/regularization step

Second step: Get residuals using fitted parameters for 13168 genes
  |                                                                              |                                                                      |   0%  |                                                                              |===                                                                   |   4%  |                                                                              |=====                                                                 |   7%  |                                                                              |========                                                              |  11%  |                                                                              |==========                                                            |  15%  |                                                                              |=============                                                         |  19%  |                                                                              |================                                                      |  22%  |                                                                              |==================                                                    |  26%  |                                                                              |=====================                                                 |  30%  |                                                                              |=======================                                               |  33%  |                                                                              |==========================                                            |  37%  |                                                                              |=============================                                         |  41%  |                                                                              |===============================                                       |  44%  |                                                                              |==================================                                    |  48%  |                                                                              |====================================                                  |  52%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  59%  |                                                                              |============================================                          |  63%  |                                                                              |===============================================                       |  67%  |                                                                              |=================================================                     |  70%  |                                                                              |====================================================                  |  74%  |                                                                              |======================================================                |  78%  |                                                                              |=========================================================             |  81%  |                                                                              |============================================================          |  85%  |                                                                              |==============================================================        |  89%  |                                                                              |=================================================================     |  93%  |                                                                              |===================================================================   |  96%  |                                                                              |======================================================================| 100%
Computing corrected count matrix for 13168 genes
  |                                                                              |                                                                      |   0%  |                                                                              |===                                                                   |   4%  |                                                                              |=====                                                                 |   7%  |                                                                              |========                                                              |  11%  |                                                                              |==========                                                            |  15%  |                                                                              |=============                                                         |  19%  |                                                                              |================                                                      |  22%  |                                                                              |==================                                                    |  26%  |                                                                              |=====================                                                 |  30%  |                                                                              |=======================                                               |  33%  |                                                                              |==========================                                            |  37%  |                                                                              |=============================                                         |  41%  |                                                                              |===============================                                       |  44%  |                                                                              |==================================                                    |  48%  |                                                                              |====================================                                  |  52%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  59%  |                                                                              |============================================                          |  63%  |                                                                              |===============================================                       |  67%  |                                                                              |=================================================                     |  70%  |                                                                              |====================================================                  |  74%  |                                                                              |======================================================                |  78%  |                                                                              |=========================================================             |  81%  |                                                                              |============================================================          |  85%  |                                                                              |==============================================================        |  89%  |                                                                              |=================================================================     |  93%  |                                                                              |===================================================================   |  96%  |                                                                              |======================================================================| 100%
Calculating gene attributes
Wall clock passed: Time difference of 2.104279 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |====                                                                  |   6%  |                                                                              |========                                                              |  11%  |                                                                              |============                                                          |  17%  |                                                                              |================                                                      |  22%  |                                                                              |===================                                                   |  28%  |                                                                              |=======================                                               |  33%  |                                                                              |===========================                                           |  39%  |                                                                              |===============================                                       |  44%  |                                                                              |===================================                                   |  50%  |                                                                              |=======================================                               |  56%  |                                                                              |===========================================                           |  61%  |                                                                              |===============================================                       |  67%  |                                                                              |===================================================                   |  72%  |                                                                              |======================================================                |  78%  |                                                                              |==========================================================            |  83%  |                                                                              |==============================================================        |  89%  |                                                                              |==================================================================    |  94%  |                                                                              |======================================================================| 100%
Set default assay to SCT
Warning: Invalid name supplied, making object name syntactically valid. New object name is Seurat..SCTransform.RNA; see ?make.names for more details on syntax validity
[1] 13168 11179
[1] 13168 11179
[1] "counts"    "logcounts"
[1] "counts"     "logcounts"  "normcounts"
[1] 13168 11179
[1] "Save normalized data..."
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
378.773  20.371 411.589 
