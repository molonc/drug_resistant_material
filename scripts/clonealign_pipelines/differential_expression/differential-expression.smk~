
workflow_name = 'de'

output_dir = os.path.join(config['outdir'], workflow_name)
scratch_dir = os.path.join(config['scratchdir'], workflow_name)
log_dir = os.path.join(config['logdir'], workflow_name)
workspace_dir = config['workspaces'][workflow_name]


de_figs = expand("{output_dir}/{{sample}}_heatmap.png".format(output_dir=output_dir),
                 sample=samples)
de_rds = expand("{output_dir}/{{sample}}_findmarkers.rds".format(output_dir=output_dir),
                 sample=samples)

rule differential_expression:
    input:
        sce='{outdir}/sce_annotated/{{sample}}.rds'.format(
                outdir=os.path.join(config['outdir'], 'preprocess')
         ),
        clonealign_fit='{outdir}/clonealign_fit/{{sample}}.rds'.format(
            outdir=output_dir
        ),
    output:
        '{outdir}/sce_qc/{{sample}}.rds'.format(
            outdir=scratch_dir
        )
    params:
        clones=lambda wildcards: config['differential_expression']['clones'][wildcards.sample]
    log:
        '{outdir}/qc/{{sample}}.log'.format(
            outdir=log_dir
        ),
    script:
        'Rscript {params.workspace}/R/qc_stats.R '
        '--sce_rds_input {input.sce} '
        '--metadata {input.metadata} '
        '--sample {params.sample} '
        '--outfname {output} '
        '>& {log}'
